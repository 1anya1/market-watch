import Head from "next/head";
import dynamic from "next/dynamic";
import { Box, HStack, Stack, Text, useColorMode } from "@chakra-ui/react";
import DataTable from "../src/components/table";
import NewsFeed from "../src/components/news-feed";
import Navigation from "../src/components/navigation";
import { useEffect, useState } from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import { Autoplay } from "swiper";
import { BsFillTriangleFill } from "react-icons/bs";

import "swiper/css";
import "swiper/css/pagination";

const Chart = dynamic(() => import("../src/components/chart"), {
  ssr: false,
});

const Home = () => {
  const [data, setData] = useState<any[]>([]);
  const [width, setWidth] = useState(0);
  const [slides, setSlides] = useState(1.25);
  const { colorMode } = useColorMode();

  useEffect(() => {
    fetch(
      "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false&price_change_percentage=24h"
    )
      .then((res) => res.json())
      .then((data) => setData(data));
  }, []);
  useEffect(() => console.log(data, width), [data, width]);
  useEffect(() => {
    setWidth(window.innerWidth);
    window.addEventListener("resize", () => setWidth(window.innerWidth));
  }, []);

  useEffect(() => {
    if (width >= 2100) {
      setSlides(5);
    } else if (width >= 1600) {
      setSlides(4);
    } else if (width >= 1100) {
      setSlides(3);
    } else if (width >= 800) {
      setSlides(2.25);
    } else if (width >= 300) {
      setSlides(1.18);
    } else {
      setSlides(1);
    }
  }, [width]);

  return (
    <>
      <Navigation />
      {data.length > 0 && (
        <Box pt="40px">
          <Swiper
            slidesPerView={slides}
            spaceBetween={30}
            pagination={{
              clickable: true,
            }}
            className="mySwiper"
            autoplay={{
              delay: 2500,
              disableOnInteraction: false,
            }}
            modules={[Autoplay]}
          >
            {data.map((el) => (
              <SwiperSlide key={el.name}>
                <Stack
                  backgroundColor={colorMode === "light" ? "#f5f6fa" : "#133364"}
                  p="10px 21px"
                  borderRadius="11px"
                >
                  <HStack>
                    <Box
                      background={`url(${el.image})`}
                      h="30px"
                      w="30px"
                      backgroundSize="contain"
                    />
                    <Text fontSize="16px" fontWeight="500">
                      {el.name}
                    </Text>
                    <Text fontSize="16px" fontWeight="700">
                      {el.symbol.toUpperCase()}
                    </Text>
                  </HStack>
                  <HStack gap="10px">
                    <Text
                      fontSize={{ base: "20px", md: "24px" }}
                      fontWeight="500"
                    >
                      ${el.current_price}
                    </Text>
                    <HStack>
                      <Box
                        transform={
                          el.price_change_percentage_24h < 0
                            ? "rotate(180deg)"
                            : "rotate(0deg)"
                        }
                      >
                        {el.price_change_percentage_24h !== 0 && (
                          <BsFillTriangleFill
                            size={8}
                            fill={
                              el.price_change_percentage_24h < 0
                                ? "var(--red)"
                                : "var(--green)"
                            }
                          />
                        )}
                      </Box>
                      <Text
                        color={
                          el.price_change_percentage_24h < 0 ? "red" : "green"
                        }
                      >
                        {Math.abs(el.price_change_percentage_24h).toFixed(2)}%
                      </Text>
                    </HStack>
                  </HStack>
                </Stack>
              </SwiperSlide>
            ))}
          </Swiper>
        </Box>
      )}

      <Box>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        {/* <Chart coinId="bitcoin" /> */}
        <DataTable />
        <NewsFeed />
      </Box>
    </>
  );
};

export default Home;
